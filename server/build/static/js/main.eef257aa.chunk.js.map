{"version":3,"sources":["themes/theme.js","themes/theme.signinup.js","components/Copyright/index.js","context/UserContext.js","pages/SignIn.js","pages/SignUp.js","themes/theme.profile.js","components/Navbar/Icon.js","components/Navbar/UserMenu.js","components/Navbar/index.js","components/Sidebar/index.js","components/Opinions/ImageOpinions.js","components/Polls/Poll.js","context/SocketContext.js","components/Polls/index.js","components/FriendsList/List.js","components/FriendsList/index.js","components/CreatePoll/index.js","components/CreateFriendsList/User.js","components/CreateFriendsList/index.js","pages/Dashboard.js","components/FriendsDashboard/SearchArea.js","components/FriendsDashboard/User.js","components/FriendsDashboard/Suggestions.js","components/FriendsDashboard/Followers.js","components/FriendsDashboard/Followings.js","components/FriendsDashboard/index.js","pages/Friends.js","components/Opinions/OpinionsPoll.js","pages/Opinions.js","pages/Profile.js","components/PollsForReview/ImageReview.js","components/PollsForReview/ReviewPoll.js","pages/PollsForReview.js","pages/PublicProfile.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","typography","fontFamily","fontSize","h1","palette","primary","main","secondary","useStyles","makeStyles","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","form","width","marginTop","submit","helper","color","StyledCopyright","styled","div","Copyright","Typography","variant","align","Link","href","Date","getFullYear","createContext","SignIn","classes","setUserData","useContext","UserContext","history","useHistory","useState","email","password","error","user","setUser","handleChange","e","target","name","value","prevUser","handleSubmit","a","preventDefault","axios","post","loginRes","token","data","localStorage","setItem","push","console","log","response","msg","isValid","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","onSubmit","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","helperText","FormHelperTextProps","Button","onClick","disabled","to","Footer","SignUp","displayName","passwordCheck","alignContent","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","toolbar","mixins","content","flexGrow","padding","wobble","keyframes","Label","UserMenu","userData","anchorEl","setAnchorEl","currentUser","IconButton","currentTarget","Badge","badgeContent","StyledAvatar","src","style","paddingLeft","paddingTop","Menu","keepMounted","open","Boolean","onClose","MenuItem","undefined","Navbar","setOpenCreatePoll","StyledToolbar","AppName","Icon","noWrap","IconsWrapper","Toolbar","Sidebar","followings","Drawer","List","length","map","ListItem","button","pathname","_id","goToProfile","alt","Name","ImageOpinions","imageUrl","imageVotes","ImageWrapper","StyledImage","Likes","img","Poll","poll","reload","setReload","handleDeletePoll","getItem","delete","pollId","friendListId","friendlist","headers","then","PollCard","Header","Question","question","StyledDeleteOutlinedIcon","Subheader","votedForImageOne","votedForImageTwo","Images","imageOneUrl","imageOneVotes","imageTwoUrl","imageTwoVotes","DeleteOutlinedIcon","span","getSocket","io","connect","query","err","socket","SocketContext","Polls","socketContext","savedPolls","polls","handleVote","on","Container","HeaderWrapper","SyledButton","PollsWrapper","StyledGridList","index","h3","GridList","list","setSelectedUser","handleDelete","friendsListId","ListCard","listName","Info","StyledSettingsIcon","Divider","friends","friend","FriendName","SettingsIcon","FriendsList","setOpenCreateFriendsList","savedLists","friendsLists","ListsWrapper","CreatePoll","openCreatePoll","initialPoll","allFriendsLists","newPoll","setNewPoll","friendList","setFriendList","previewSourceOne","setPreviewSourceOne","previewSourceTwo","setPreviewSourceTwo","previewFileOne","file","reader","FileReader","readAsDataURL","onloadend","result","previewFileTwo","handleSubmitPoll","newPollForUpload","imageOne","imageTwo","author","createPoll","StyledModal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","CustomContainer","PollData","InputsWrapper","prevPoll","select","ImagesWrapper","ImageContainer","Image","Prompt","StyledForm","StyledInput","files","Modal","input","User","newFriendsList","setNewFriendsList","added","setAdded","useEffect","some","active","filteredFriends","filter","prevList","concat","props","CreateFriendsList","openCreateFriendsList","followers","initialFriendsList","handleSubmitFriendsList","createFriendsList","FriendsContainer","Dashboard","StyledPage","AppBar","position","SearchArea","setQuery","SearchBox","SearchInput","placeholder","nextValue","Suggestions","followed","setFollowed","handleFollowButton","uploadFollower","handleUnfollowButton","removeFollower","put","userToFollow","userToUnfollow","users","setUsers","get","resp","filteredUsers","getUsers","toLowerCase","includes","Followers","savedFollowers","Followings","savedFollowings","FriendsDashboard","selectedHeader","setSelectedHeader","Friends","OpinionsPoll","Opinions","Profile","previewSource","setPreviewSource","dataToUpdate","updatedUser","setUpdatedUser","previewFile","handleUpdateProfile","updatedUserForUpload","updateUser","UserInputForm","UserInputLine","StyledTextField","SavedData","ImageUploader","ImageReview","userId","votedForThisImage","votedForOtherImage","removeVote","addVote","emit","StyledFavoriteIcon","StyledFavoriteBorderIcon","FavoriteIcon","FavoriteBorderIcon","ReviewPoll","PollsForReview","pollsForReview","PublicProfile","selectedUser","useLocation","split","userRes","getSelectedUser","getUser","UserDataWrapper","App","setPolls","checkLoggedIn","Provider","exact","path","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eef257aa.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Roboto\"',\r\n    fontSize: 12,\r\n    h1: {\r\n      // could customize the h1 variant as well\r\n    }\r\n  },\r\n  palette: {\r\n    primary: { main: '#1e9fb0' },\r\n    secondary: { main: '#F15BB5'}\r\n  }\r\n});\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/collection/4923741)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    helper: {\r\n        color: 'red',\r\n        fontSize: '1em',\r\n   },\r\n}));\r\n  \r\nexport default useStyles;","import styled from 'styled-components';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <StyledCopyright>\r\n            <Typography variant='body2' color='textSecondary' align='center'>\r\n                {'Made with ❤️ by '}\r\n                <Link color='inherit' href='https://www.artsybiba.com/'>\r\n                    Artsy Biba\r\n                </Link>{' '}\r\n                {new Date().getFullYear()}\r\n                {'.'}\r\n            </Typography>\r\n        </StyledCopyright>\r\n    );\r\n}\r\n\r\nconst StyledCopyright = styled.div`\r\n    display: flex;\r\n    margin: auto;\r\n    margin-top: 1.5em;\r\n    margin-bottom: 1em;\r\n`;\r\n\r\nexport default Copyright;","import { createContext } from 'react';\r\n\r\nexport default createContext(null);","import { useState, useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport useStyles from '../themes/theme.signinup';\r\nimport Copyright from '../components/Copyright/index';\r\nimport UserContext from '../context/UserContext';\r\n\r\nexport default function SignIn() {\r\n    const classes = useStyles();\r\n    const { setUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const initialUser = {\r\n        email: '', \r\n        password: '', \r\n        error: null,\r\n    };\r\n\r\n    const [user, setUser] = useState(initialUser);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser(prevUser => {\r\n            return { \r\n                ...prevUser, \r\n                [name]: value, \r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const loginRes = await axios.post('http://localhost:5000/users/login', {\r\n                email: user.email, \r\n                password: user.password,\r\n            });\r\n            setUserData({\r\n                token: loginRes.data.token,\r\n                user: loginRes.data.user,\r\n            });\r\n            localStorage.setItem('auth-token', loginRes.data.token);\r\n\r\n            history.push('/dashboard');\r\n        } catch (err) {\r\n            console.log(err);\r\n            err.response.data.msg && setUser({ ...user, error: err.response.data.msg });\r\n        }\r\n    };\r\n\r\n    const isValid = user.email === '' || user.password === '';\r\n\r\n    return (\r\n        <Grid container component='main' className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component='h1' variant='h5'>\r\n                        Sign In\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={(e) => e.preventDefault()} noValidate>\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            id='email'\r\n                            label='Email Address'\r\n                            name='email'\r\n                            autoComplete='email'\r\n                            autoFocus\r\n                            onChange={handleChange}\r\n                            helperText='For testing you can use: test@test.com'\r\n                            FormHelperTextProps={{className: classes.helper}}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            name='password'\r\n                            label='Password'\r\n                            type='password'\r\n                            id='password'\r\n                            autoComplete='current-password'\r\n                            onChange={handleChange}\r\n                            helperText='For testing you can use: password'\r\n                            FormHelperTextProps={{className: classes.helper}}\r\n                        />\r\n                        <Typography color='secondary'>\r\n                            {user.error ? user.error : ''}\r\n                        </Typography>\r\n                        <Button\r\n                            type='submit'\r\n                            fullWidth\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.submit}\r\n                            onClick={handleSubmit}\r\n                            disabled={isValid}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <Link to='/signup'>\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n                <Footer>\r\n                    <Copyright />\r\n                </Footer>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst Footer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: auto;\r\n`;","import { useState, useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport useStyles from '../themes/theme.signinup';\r\nimport Copyright from '../components/Copyright/index';\r\nimport UserContext from '../context/UserContext';\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n    const { setUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const initialUser = {\r\n        displayName: '',\r\n        email: '', \r\n        password: '',\r\n        passwordCheck: '',\r\n        error: null,\r\n    };\r\n\r\n    const [user, setUser] = useState(initialUser);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser(prevUser => {\r\n            return { \r\n                ...prevUser, \r\n                [name]: value, \r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            await axios.post('http://localhost:5000/users/register', user);\r\n            const loginRes = await axios.post('http://localhost:5000/users/login', {\r\n                email: user.email, \r\n                password: user.password,\r\n            });\r\n            setUserData({\r\n                token: loginRes.data.token,\r\n                user: loginRes.data.user,\r\n            });\r\n            localStorage.setItem('auth-token', loginRes.data.token);\r\n\r\n            history.push('/dashboard');\r\n        } catch (err) {\r\n            err.response.data.msg && setUser({ ...user, error: err.response.data.msg });\r\n        }\r\n    };\r\n\r\n    const isValid = user.name === '' || user.email === '' || user.password === '' || user.passwordCheck === '';\r\n\r\n    return (\r\n        <Grid container component='main' className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component='h1' variant='h5'>\r\n                        Sign Up\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={(e) => e.preventDefault()} noValidate>\r\n                        \r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            id='name'\r\n                            label='Name'\r\n                            name='displayName'\r\n                            autoFocus\r\n                            value={user.displayName}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            id='email'\r\n                            label='Email Address'\r\n                            name='email'\r\n                            autoComplete='email'\r\n                            autoFocus\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            name='password'\r\n                            label='Password'\r\n                            type='password'\r\n                            id='password'\r\n                            autoComplete='current-password'\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            name='passwordCheck'\r\n                            label='Password Confirmation'\r\n                            type='password'\r\n                            id='passwordCheck'\r\n                            autoComplete='passwordCheck'\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Typography color='secondary'>\r\n                            {user.error ? user.error : ''}\r\n                        </Typography>\r\n                        <Button\r\n                            type='submit'\r\n                            fullWidth\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.submit}\r\n                            onClick={handleSubmit}\r\n                            disabled={isValid}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <Link to='/' >\r\n                                    {\"Already have an account? Sign In\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n                <Footer>\r\n                    <Copyright />\r\n                </Footer>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst Footer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: auto;\r\n`;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 170;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        alignContent: 'center',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default useStyles;","import styled, { keyframes } from 'styled-components';\r\n\r\nconst wobble = keyframes`\r\n    25% {\r\n        transform: rotate(15deg);\r\n    }\r\n    50% {\r\n        transform: rotate(-30deg);\r\n    }\r\n    75% {\r\n        transform: rotate(5deg);\r\n    }\r\n    100% {\r\n        transform: rotate(0deg);\r\n    }\r\n`;\r\n\r\nconst Label = styled.div`\r\n    font-size: 1.5rem;\r\n    margin: 0.5rem;\r\n\r\n    &:hover {\r\n        animation: ${wobble} 1s 1;\r\n    }\r\n\r\n    @media(max-width: 600px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport default Label;","import { useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport styled from 'styled-components';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport default function UserMenu () { \r\n    const { userData, setUserData } = useContext(UserContext);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const history = useHistory();\r\n    \r\n    let currentUser = '';\r\n    \r\n    if (userData.user) {\r\n        currentUser = userData.user.displayName;\r\n    };\r\n\r\n    const logout = () => {\r\n        setUserData({\r\n            token: undefined,\r\n            user: undefined,\r\n        });\r\n        \r\n        localStorage.setItem('auth-token', '');\r\n        history.push('/');\r\n    };\r\n\r\n    const goToProfile = () => {\r\n        history.push('/profile');\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const openUserMenu = (e) => {\r\n        setAnchorEl(e.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return ( \r\n        <>\r\n            <IconButton color='inherit' onClick={openUserMenu}>\r\n                <Badge badgeContent={0} color='secondary'>\r\n                    <StyledAvatar src={userData.user.avatar} />\r\n                    <Typography component='p' style={{paddingLeft: '10px', paddingTop: '5px'}}>\r\n                        {currentUser}\r\n                    </Typography>\r\n                </Badge>\r\n            </IconButton>\r\n            <Menu\r\n                id='simple-menu'\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={goToProfile}>My Profile</MenuItem>\r\n                <MenuItem onClick={logout}>Logout</MenuItem>\r\n            </Menu>\r\n        </>\r\n    )\r\n};\r\n\r\nconst StyledAvatar = styled(Avatar)`\r\n    width: 30px;\r\n    height: 30px;\r\n`;","import styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Icon from './Icon';\r\nimport UserMenu from './UserMenu';\r\n\r\nexport default function Navbar ({ setOpenCreatePoll }) {\r\n    const history = useHistory();\r\n    \r\n    const handleCreatePoll = () => {\r\n        setOpenCreatePoll(true);\r\n    };\r\n\r\n    const handleOpenFriends = () => {\r\n        history.push('/friends');\r\n    };\r\n\r\n    const handleOpenDashboard = () => {\r\n        history.push('/dashboard');\r\n    };\r\n\r\n    const handleOpenOpinions = () => {\r\n        history.push('/opinions');\r\n    };\r\n\r\n    const handleOpenReview = () => {\r\n        history.push('/review');\r\n    };\r\n    \r\n    return (\r\n        <StyledToolbar>\r\n            <AppName onClick={handleOpenDashboard}>\r\n                <Icon>💬 </Icon>\r\n                <Typography \r\n                    component='h1' \r\n                    variant='h6' \r\n                    color='inherit' \r\n                    noWrap \r\n                >\r\n                    Social App\r\n                </Typography>\r\n            </AppName>\r\n            <IconsWrapper>\r\n                <IconButton color='inherit' onClick={handleOpenFriends}>\r\n                    <Typography component='p'>\r\n                        Friends\r\n                    </Typography>\r\n                </IconButton>\r\n                <IconButton color='inherit' onClick={handleOpenReview}>\r\n                    <Typography>\r\n                        Friends posts\r\n                    </Typography>\r\n                </IconButton>\r\n                <IconButton color='inherit' onClick={handleOpenOpinions}>\r\n                    <Typography component='p'>\r\n                        Opinions\r\n                    </Typography>\r\n                </IconButton>\r\n                <IconButton color='inherit' onClick={handleCreatePoll}>\r\n                    <Typography component='p'>\r\n                        Create Poll\r\n                    </Typography>\r\n                </IconButton>\r\n                <UserMenu />\r\n            </IconsWrapper>\r\n        </StyledToolbar>\r\n    )\r\n};\r\n\r\nconst AppName = styled.div`\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst IconsWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    color: white;\r\n`;\r\n\r\nconst StyledToolbar = styled(Toolbar)`\r\n    justify-content: space-between;\r\n`;","import { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport UserContext from '../../context/UserContext';\r\nimport useStyles from '../../themes/theme.profile';\r\n\r\nexport default function Sidebar () {\r\n    const { userData } = useContext(UserContext);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const followings = userData.user.followings;\r\n\r\n    const goToProfile = (user) => {\r\n        history.push({\r\n            pathname: `/${user._id}/profile`,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            className={classes.drawer}\r\n            variant='permanent'\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <Toolbar />\r\n            <div className={classes.drawerContainer}>\r\n                <List>\r\n                    {followings.length > 0 && \r\n                        followings.map((user) => (\r\n                            <ListItem button key={user._id} onClick={() => goToProfile(user)}> \r\n                                <Avatar src={user.avatar} alt={user.displayName}/>\r\n                                <Name>{user.displayName}</Name>\r\n                            </ListItem>\r\n                        ))\r\n                    }\r\n                </List>\r\n            </div>\r\n        </Drawer>\r\n    )\r\n}   \r\n\r\nconst Name = styled.div`\r\n    display: flex;\r\n    margin-left: 1em;\r\n    font-size: 0.9em;\r\n    font-weight: 600;\r\n`;","import styled from 'styled-components';\r\n\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\n\r\nexport default function ImageOpinions ({ imageUrl, imageVotes }) {\r\n    return (\r\n        <ImageWrapper>\r\n            <StyledImage src={imageUrl} alt='pollImage' />\r\n            <Likes>\r\n                {imageVotes\r\n                    ? <FavoriteIcon /> \r\n                    : <FavoriteBorderIcon />\r\n                }\r\n                {imageVotes}\r\n            </Likes>\r\n        </ImageWrapper>\r\n    )\r\n}\r\n\r\nconst ImageWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst Likes = styled.div`\r\n    display: flex;\r\n    width: 50px;\r\n    justify-content: space-around;\r\n`;\r\n\r\nconst StyledImage = styled.img`\r\n    height: 70px;\r\n    width: 70px;\r\n    margin: 1em 0.5em 1.5em 0.5em;\r\n`;","import styled from 'styled-components';\r\nimport { useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\n\r\nimport ImageOpinions from '../Opinions/ImageOpinions';\r\nimport UserContext from '../../context/UserContext';\r\n\r\nexport default function Poll ({ poll }) {\r\n    const { reload, setReload } = useContext(UserContext);\r\n\r\n    const handleDeletePoll = async () => {\r\n        const token = localStorage.getItem('auth-token');\r\n        \r\n        try {\r\n            await axios.delete('http://localhost:5000/polls/delete', \r\n                { \r\n                    data: {\r\n                        pollId: poll._id,\r\n                        friendListId: poll.friendlist,\r\n                    }, \r\n                    headers: { 'x-auth-token': token },\r\n                }, \r\n            )\r\n            .then(setReload(!reload))\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <PollCard>\r\n            <Header>\r\n                <Question>{poll.question}</Question>\r\n                <StyledDeleteOutlinedIcon onClick={handleDeletePoll} />\r\n            </Header>\r\n            <Subheader>{poll.votedForImageOne.length + poll.votedForImageTwo.length} answers</Subheader>\r\n            <Images>\r\n                <ImageOpinions imageUrl={poll.imageOneUrl} imageVotes={poll.imageOneVotes} />\r\n                <ImageOpinions imageUrl={poll.imageTwoUrl} imageVotes={poll.imageTwoVotes} />\r\n            </Images>\r\n        </PollCard>\r\n    )\r\n}\r\n\r\nconst PollCard = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    background-color: white;\r\n    width: 45vh;\r\n    height: 40vh;\r\n    box-shadow: 0 5px 15px 0 rgba(0,0,0,0.1);\r\n    border-radius: 2px;\r\n    margin-right: 1em;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst Question = styled.div`\r\n    align-self: center;\r\n    text-align: center;\r\n    font-weight: 600;\r\n    width: 40vh;\r\n    margin-top: 0.5em;\r\n    margin-bottom: 0.5em;\r\n    margin-left: 2em;\r\n`;\r\n\r\nconst StyledDeleteOutlinedIcon = styled(DeleteOutlinedIcon)`\r\n    margin-right: 0.5em;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        box-shadow: 0 5px 15px 0 rgba(0,0,0,0.25);\r\n\r\n        transition: all 0.3s ease 0s;\r\n    }\r\n`;\r\n\r\nconst Subheader = styled.span`\r\n    align-self: center;\r\n    color: lightgray;\r\n    font-size: 0.8em;\r\n`;\r\n\r\nconst Images = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 1em;\r\n`;\r\n\r\n","import { createContext } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst getSocket = () => {\r\n    const token = localStorage.getItem('auth-token');\r\n\r\n    try {\r\n        const socket = io.connect('http://localhost:5000/', {\r\n            query: 'token=' + token,\r\n        });\r\n        return socket\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const socket = getSocket();\r\n\r\nexport const SocketContext = createContext({ socket: getSocket() });","import { useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport GridList from '@material-ui/core/GridList';\r\n\r\nimport Poll from './Poll';\r\nimport UserContext from '../../context/UserContext';\r\nimport { SocketContext } from '../../context/SocketContext';\r\n\r\nexport default function Polls ({ setOpenCreatePoll }) {\r\n    const { userData, reload, setReload } = useContext(UserContext);\r\n    const socketContext = useContext(SocketContext);\r\n    const savedPolls = userData.user.polls;\r\n    \r\n    const handleCreatePoll = () => {\r\n        setOpenCreatePoll(true);\r\n    };\r\n\r\n    const handleVote = () => {\r\n        setReload(!reload)\r\n    };\r\n\r\n    socketContext.on('uservoted', () => {\r\n        handleVote();\r\n    });\r\n\r\n     socketContext.on('userunvoted', () => {\r\n        handleVote();\r\n     });\r\n    \r\n    return (\r\n        <Container>\r\n            <HeaderWrapper>\r\n                <Header>Polls</Header>\r\n                <SyledButton variant='outlined' onClick={handleCreatePoll}>\r\n                    Create Poll\r\n                </SyledButton>\r\n            </HeaderWrapper>\r\n            <PollsWrapper>\r\n                <StyledGridList>\r\n                    {savedPolls\r\n                        ? savedPolls.map((poll, index) => (\r\n                            <Poll \r\n                                poll={poll} \r\n                                key={index}\r\n                            />\r\n                        )) : (\r\n                            <div>Create your first poll</div>\r\n                        )\r\n                    }\r\n                </StyledGridList>\r\n            </PollsWrapper>\r\n        </Container>\r\n    )\r\n};\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n    display: flex;\r\n    margin: 1em;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst Header = styled.h3`\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n`;\r\n\r\nconst SyledButton = styled(Button)`\r\n    align-self: flex-end;\r\n    text-transform: uppercase;\r\n    width: 120px;\r\n`;\r\n\r\nconst PollsWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    overflow: hidden;\r\n    margin: 1em;\r\n    width: 110vh;\r\n    height: 44vh;\r\n`;\r\n\r\nconst StyledGridList = styled(GridList)`\r\n    flex-wrap: nowrap;\r\n    transform: translateZ(0);    \r\n`;","import styled from 'styled-components';\r\nimport { useContext, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { Divider } from '@material-ui/core';\r\nimport GenericList from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport UserContext from '../../context/UserContext';\r\n\r\nexport default function List ({ list }) {\r\n    const { reload, setReload, setSelectedUser } = useContext(UserContext);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const history = useHistory();\r\n    \r\n    const handleDelete = async () => {\r\n        const token = localStorage.getItem('auth-token');\r\n        \r\n        try {\r\n            await axios.delete('http://localhost:5000/friendsList/delete', {\r\n                data: {\r\n                    friendsListId: list._id,\r\n                },\r\n                headers: { 'x-auth-token': token },\r\n            })\r\n            .then(setReload(!reload))\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const goToProfile = (user) => {\r\n        setSelectedUser(user);\r\n        \r\n        history.push({\r\n            pathname: `/${user._id}/profile`,\r\n        });\r\n    };\r\n\r\n    const openUserMenu = (e) => {\r\n        setAnchorEl(e.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <ListCard>\r\n            <Header>\r\n                <Subheader>\r\n                    <Name>{list.listName}</Name>\r\n                    <Info>4 online</Info>\r\n                </Subheader>\r\n                <StyledSettingsIcon color='disabled' onClick={openUserMenu} />\r\n                <Menu\r\n                    id='simple-menu'\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >\r\n                <MenuItem onClick={handleDelete}>\r\n                    Delete List\r\n                </MenuItem>\r\n            </Menu>\r\n            </Header>\r\n            <Divider />\r\n            <GenericList>\r\n                {list.friends.map((friend) => (\r\n                    <ListItem button key={friend._id} onClick={() => goToProfile(friend)}>\r\n                        <Avatar src={friend.avatar} alt={friend.displayName} />\r\n                        <FriendName>{friend.displayName}</FriendName>\r\n                    </ListItem>\r\n                ))}\r\n            </GenericList>\r\n        </ListCard>\r\n    )\r\n}\r\n\r\nconst ListCard = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    background-color: white;\r\n    width: 45vh;\r\n    height: auto;\r\n    box-shadow: 0 5px 15px 0 rgba(0,0,0,0.1);\r\n    border-radius: 2px;\r\n    margin-right: 0.5em;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    height: 10vh;\r\n    justify-content: space-between;\r\n    margin: 0.5em;\r\n`;\r\n\r\nconst Subheader = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 30vh;\r\n`;\r\n\r\nconst Name = styled.div`\r\n    margin: 0.8em 0em 0em 1em;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Info = styled.div`\r\n    margin-left: 1.2em;\r\n    color: lightgray;\r\n    font-size: 0.8em;\r\n`;\r\n\r\nconst StyledSettingsIcon = styled(SettingsIcon)`\r\n    margin: 1em 1em 0 0;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst FriendName = styled.div`\r\n    display: flex;\r\n    margin-left: 1em;\r\n    font-size: 0.9em;\r\n    font-weight: 600;\r\n`;","import styled from 'styled-components';\r\nimport { useContext } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport GridList from '@material-ui/core/GridList';\r\n\r\nimport List from './List';\r\nimport UserContext from '../../context/UserContext';\r\n\r\nexport default function FriendsList ({ setOpenCreateFriendsList }) {\r\n    const { userData } = useContext(UserContext);\r\n    const savedLists = userData.user.friendsLists;\r\n    \r\n    const handleCreateFriendsList = () => {\r\n        setOpenCreateFriendsList(true);\r\n    };\r\n    \r\n    return (\r\n        <Container>\r\n            <HeaderWrapper>\r\n                <Header>Friends List</Header>\r\n                <SyledButton variant='outlined' onClick={handleCreateFriendsList}>\r\n                    Create List\r\n                </SyledButton>\r\n            </HeaderWrapper>\r\n            <ListsWrapper>\r\n                <StyledGridList>\r\n                    {savedLists\r\n                        ? savedLists.map((list, index) => (\r\n                            <List \r\n                                list={list} \r\n                                key={index}\r\n                            />\r\n                        )) : (\r\n                            <div>Create your first poll</div>\r\n                        )\r\n                    }\r\n                </StyledGridList>\r\n            </ListsWrapper>\r\n        </Container>\r\n    )\r\n};\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n    display: flex;\r\n    margin: 1em;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst Header = styled.h3`\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n`;\r\n\r\nconst SyledButton = styled(Button)`\r\n    align-self: flex-end;\r\n    text-transform: uppercase;\r\n    width: 120px;\r\n`;\r\n\r\nconst ListsWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    overflow: hidden;\r\n    margin: 1em;\r\n    width: 110vh;\r\n`;\r\n\r\nconst StyledGridList = styled(GridList)`\r\n    flex-wrap: nowrap;\r\n    transform: translateZ(0);    \r\n`;","import styled from 'styled-components';\r\nimport { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport UserContext from '../../context/UserContext';\r\n\r\nexport default function CreatePoll ({ openCreatePoll, setOpenCreatePoll }) {\r\n    const { userData, reload, setReload } = useContext(UserContext);\r\n    \r\n    const initialPoll = {\r\n        question: '', \r\n        friendlist: {},\r\n        error: null,\r\n    };\r\n\r\n    const allFriendsLists = userData.user.friendsLists;\r\n    const [newPoll, setNewPoll] = useState(initialPoll);\r\n    const [friendList, setFriendList] = useState('');\r\n    const [previewSourceOne, setPreviewSourceOne] = useState();\r\n    const [previewSourceTwo, setPreviewSourceTwo] = useState();\r\n    const fileInputStateOne = '';\r\n    const fileInputStateTwo = '';\r\n\r\n    const handleClose = () => {\r\n        setOpenCreatePoll(false);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewPoll(prevPoll => {\r\n            return { \r\n                ...prevPoll, \r\n                [name]: value, \r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSelect = (e) => {\r\n        setNewPoll(prevPoll => {\r\n            return { \r\n                ...prevPoll, \r\n                friendlist: e.target.value, \r\n            }\r\n        });\r\n\r\n        setFriendList(e.target.value);\r\n    };\r\n\r\n    const handleFileInputChangeOne = (e) => {\r\n        const file = e.target.files[0];\r\n        previewFileOne(file);\r\n    };\r\n\r\n    const previewFileOne = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSourceOne(reader.result);\r\n        };\r\n    };\r\n\r\n    const handleFileInputChangeTwo = (e) => {\r\n        const file = e.target.files[0];\r\n        previewFileTwo(file);\r\n    };\r\n\r\n    const previewFileTwo = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSourceTwo(reader.result);\r\n        };\r\n    };\r\n  \r\n    const handleSubmitPoll = async (e) => {\r\n        e.preventDefault();\r\n        if(!newPoll) return;\r\n        \r\n        const newPollForUpload = {\r\n            imageOne: previewSourceOne, \r\n            imageTwo: previewSourceTwo,\r\n            question: newPoll.question,\r\n            friendlist: newPoll.friendlist,\r\n            author: userData.user.displayName,\r\n        }\r\n\r\n        await createPoll(newPollForUpload);\r\n        setReload(!reload);\r\n        \r\n        setPreviewSourceOne('');\r\n        setPreviewSourceTwo('');\r\n        setOpenCreatePoll(false);\r\n        setNewPoll(initialPoll);\r\n    };\r\n    \r\n    const createPoll = async (newPollForUpload) => {\r\n        const token = localStorage.getItem('auth-token');\r\n        \r\n        try {\r\n            await axios.post('http://localhost:5000/polls/', \r\n                { newPollForUpload },\r\n                { headers: { 'x-auth-token': token } },\r\n            )\r\n        } catch (err) {\r\n            err.response.data.msg && setNewPoll({ ...newPoll, error: err.response.data.msg });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <StyledModal\r\n            aria-labelledby='transition-modal-title'\r\n            aria-describedby='transition-modal-description'\r\n            open={openCreatePoll}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500,\r\n            }}\r\n        >\r\n            <Fade in={openCreatePoll}>\r\n                <CustomContainer>\r\n                    <PollData>\r\n                        <InputsWrapper>\r\n                            <TextField\r\n                                margin='normal'\r\n                                required\r\n                                fullWidth\r\n                                id='question'\r\n                                label='Enter your question'\r\n                                name='question'\r\n                                autoFocus\r\n                                onChange={handleChange}\r\n                            />\r\n                            <TextField\r\n                                id='standard-select-friendlist'\r\n                                select\r\n                                label='Select your friend list'\r\n                                name='friendlist'\r\n                                value={friendList}\r\n                                onChange={handleSelect}\r\n                            >\r\n                                {allFriendsLists && allFriendsLists.map((list) => (\r\n                                    <MenuItem key={list._id} value={list}>\r\n                                        {list.listName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </InputsWrapper>\r\n                        <ImagesWrapper>\r\n                            {previewSourceOne ? (\r\n                                <ImageContainer>\r\n                                    <Image src={previewSourceOne} alt='chosenOne' />\r\n                                </ImageContainer>\r\n                            ) : (\r\n                                <Prompt>Select Image #1</Prompt>\r\n                            )}\r\n                            <StyledForm>\r\n                                <StyledInput \r\n                                    type='file' \r\n                                    name='imageOne' \r\n                                    onChange={handleFileInputChangeOne}\r\n                                    value={fileInputStateOne}\r\n                                />\r\n                            </StyledForm>\r\n                            {previewSourceTwo ? (\r\n                                <ImageContainer>\r\n                                    <Image src={previewSourceTwo} alt='chosenTwo' />\r\n                                </ImageContainer>\r\n                            ) : (\r\n                                <Prompt>Select Image #2</Prompt>\r\n                            )}\r\n                            <StyledForm>\r\n                                <StyledInput \r\n                                    type='file' \r\n                                    name='imageTwo' \r\n                                    onChange={handleFileInputChangeTwo}\r\n                                    value={fileInputStateTwo}\r\n                                />\r\n                            </StyledForm>\r\n                        </ImagesWrapper>\r\n                    </PollData>\r\n                    <Typography color='secondary'>\r\n                        {newPoll.error ? newPoll.error : ''}\r\n                    </Typography>\r\n                    <SyledButton variant='outlined' onClick={handleSubmitPoll}>\r\n                        Create Poll\r\n                    </SyledButton>\r\n                </CustomContainer>\r\n            </Fade>\r\n        </StyledModal>\r\n    )\r\n}\r\n\r\nconst StyledModal = styled(Modal)`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: auto;\r\n`;\r\n\r\nconst CustomContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    height: 60vh;\r\n    width: 100vh;\r\n    background-color: white;\r\n    box-shadow: 0 5px 15px 0 rgba(0,0,0,0.1);\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst PollData = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    height: 50vh;\r\n`;\r\n\r\nconst SyledButton = styled(Button)`\r\n    align-self: flex-end;\r\n    text-transform: uppercase;\r\n    width: 120px;\r\n    margin: auto;\r\n    margin-top: 1em;\r\n    margin-bottom: 1em;\r\n`;\r\n\r\nconst ImagesWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    margin: 1em;\r\n    margin-left: 1em;\r\n`;\r\n\r\nconst InputsWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    width: 40vh;\r\n    margin: 1em;\r\n    margin-left: 2em;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n    margin: auto;\r\n    margin-top: 0.5em;\r\n    margin-bottom: 0.5em;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n    display: block;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Prompt = styled.div`\r\n    margin: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n    flex-direction: column;\r\n    color: lightgray;\r\n`;\r\n\r\nconst Image = styled.img`\r\n    height: 70px;\r\n    width: 70px;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n`;","import styled from 'styled-components';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function User ({ user, newFriendsList, setNewFriendsList }) {\r\n    const [added, setAdded] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        const checkIfAdded = () => {\r\n            return (\r\n                setAdded(newFriendsList.friends.some(e => e._id === user._id))\r\n            )\r\n        };\r\n\r\n        checkIfAdded();\r\n    }, [newFriendsList.friends, user._id]);\r\n\r\n    const handleAddButton = () => {  \r\n        setNewFriendsList(prevList => {\r\n            return { \r\n                ...prevList,\r\n                friends: prevList.friends.concat(user), \r\n            }\r\n        });\r\n    };\r\n\r\n    const handleRemoveButton = () => {\r\n        const filteredFriends = newFriendsList.friends.filter(e => e._id !== user._id);\r\n        \r\n        setNewFriendsList(prevList => {\r\n            return { \r\n                ...prevList, \r\n                friends: filteredFriends, \r\n            }\r\n        });\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <ListItem button>\r\n                <Avatar src={user.avatar} />\r\n                <Name>{user.displayName}</Name>\r\n                {added ? \r\n                    <SyledButton active='active' variant='contained' onClick={handleRemoveButton}>\r\n                        Remove\r\n                    </SyledButton> :\r\n                    <SyledButton variant='outlined' onClick={handleAddButton}>\r\n                        Add\r\n                    </SyledButton>\r\n                }\r\n            </ListItem>\r\n            <Divider />\r\n        </>\r\n    )\r\n}\r\n\r\nconst Name = styled.div`\r\n    display: flex;\r\n    margin-left: 1em;\r\n    font-size: 0.8em;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst SyledButton = styled(Button)`\r\n    text-transform: uppercase;\r\n    width: 70px;\r\n    height: 20px;\r\n    background-color: ${props => props.active ? 'lightred' : 'lightgreen'};\r\n    position: absolute;\r\n    right: 16px;\r\n`;","import styled from 'styled-components';\r\nimport { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport UserContext from '../../context/UserContext';\r\nimport User from './User';\r\n\r\nexport default function CreateFriendsList ({ openCreateFriendsList, setOpenCreateFriendsList }) {\r\n    const { userData, reload, setReload } = useContext(UserContext);\r\n\r\n    const followers = userData.user.followers;\r\n    \r\n    const initialFriendsList = {\r\n        listName: '', \r\n        friends: [],\r\n        error: null,\r\n    };\r\n\r\n    const [newFriendsList, setNewFriendsList] = useState(initialFriendsList);\r\n\r\n    const handleClose = () => {\r\n        setOpenCreateFriendsList(false);\r\n        setNewFriendsList(initialFriendsList);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewFriendsList(prevList => {\r\n            return { \r\n                ...prevList, \r\n                [name]: value, \r\n            }\r\n        });\r\n    };\r\n  \r\n    const handleSubmitFriendsList = async (e) => {\r\n        e.preventDefault();\r\n\r\n        await createFriendsList(newFriendsList);\r\n        setReload(!reload);\r\n        \r\n        setNewFriendsList(initialFriendsList);\r\n        setOpenCreateFriendsList(false);\r\n    };\r\n    \r\n    const createFriendsList = async (newFriendsList) => {\r\n        const token = localStorage.getItem('auth-token');\r\n        \r\n        try {\r\n            await axios.post('http://localhost:5000/friendsList', \r\n                { newFriendsList },\r\n                { headers: { 'x-auth-token': token } },\r\n            )\r\n        } catch (err) {\r\n            err.response.data.msg && setNewFriendsList({ ...newFriendsList, error: err.response.data.msg });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <StyledModal\r\n            aria-labelledby='transition-modal-title'\r\n            aria-describedby='transition-modal-description'\r\n            open={openCreateFriendsList}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500,\r\n            }}\r\n        >\r\n            <Fade in={openCreateFriendsList}>\r\n                <CustomContainer>\r\n                    <PollData>\r\n                        <InputsWrapper>\r\n                            <TextField\r\n                                margin='normal'\r\n                                required\r\n                                fullWidth\r\n                                id='listName'\r\n                                label='Enter the list name'\r\n                                name='listName'\r\n                                autoFocus\r\n                                onChange={handleChange}\r\n                            />\r\n                        </InputsWrapper>\r\n                        <FriendsContainer>\r\n                            <List>\r\n                                {followers && followers\r\n                                    .map((user) => (\r\n                                        <User \r\n                                            key={user._id} \r\n                                            user={user} \r\n                                            newFriendsList={newFriendsList} \r\n                                            setNewFriendsList={setNewFriendsList}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                            </List>\r\n                        </FriendsContainer>\r\n                    </PollData>\r\n                    <Typography color='secondary'>\r\n                        {newFriendsList.error ? newFriendsList.error : ''}\r\n                    </Typography>\r\n                    <SyledButton variant='outlined' onClick={handleSubmitFriendsList}>\r\n                        Create List\r\n                    </SyledButton>\r\n                </CustomContainer>\r\n            </Fade>\r\n        </StyledModal>\r\n    )\r\n}\r\n\r\nconst StyledModal = styled(Modal)`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: auto;\r\n`;\r\n\r\nconst CustomContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    height: 80vh;\r\n    width: 70vh;\r\n    background-color: white;\r\n    box-shadow: 0 5px 15px 0 rgba(0,0,0,0.1);\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst PollData = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    width: 100%;\r\n    height: 70vh;\r\n`;\r\n\r\nconst FriendsContainer = styled.div`\r\n    margin: auto;\r\n    margin-top: 0;\r\n    margin-bottom: 1em;\r\n    width: 85%;\r\n`;\r\n\r\nconst SyledButton = styled(Button)`\r\n    align-self: flex-end;\r\n    text-transform: uppercase;\r\n    width: 120px;\r\n    margin: auto;\r\n    margin-top: 1em;\r\n    margin-bottom: 1.5em;\r\n`;\r\n\r\nconst InputsWrapper = styled.div`\r\n    display: flex;\r\n    width: 40vh;\r\n    margin: auto;\r\n    margin-top: 1em;\r\n    margin-bottom: 1em;\r\n`;","import { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../context/UserContext';\r\nimport useStyles from '../themes/theme.profile';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\n\r\nimport Navbar from '../components/Navbar';\r\nimport Sidebar from '../components/Sidebar/index';\r\nimport Polls from '../components/Polls/index';\r\nimport FriendsList from '../components/FriendsList/index';\r\nimport CreatePoll from '../components/CreatePoll/index';\r\nimport CreateFriendsList from '../components/CreateFriendsList/index';\r\n\r\n \r\nexport default function Dashboard () {   \r\n    const { userData } = useContext(UserContext);\r\n    const classes = useStyles();\r\n    const [openCreatePoll, setOpenCreatePoll] = useState(false);\r\n    const [openCreateFriendsList, setOpenCreateFriendsList] = useState(false);\r\n\r\n    return (\r\n        <StyledPage>\r\n            {userData.user ? (\r\n                <>\r\n                    <AppBar position='fixed' className={classes.appBar}>\r\n                        <Navbar setOpenCreatePoll={setOpenCreatePoll} />\r\n                    </AppBar>\r\n                    <Sidebar /> \r\n                    <main className={classes.content}>\r\n                        <div className={classes.toolbar} />\r\n                        <Polls setOpenCreatePoll={setOpenCreatePoll} />\r\n                        <FriendsList setOpenCreateFriendsList={setOpenCreateFriendsList} />\r\n                    </main>\r\n                    <CreatePoll \r\n                        openCreatePoll={openCreatePoll}\r\n                        setOpenCreatePoll={setOpenCreatePoll}\r\n                    />\r\n                    <CreateFriendsList\r\n                        openCreateFriendsList={openCreateFriendsList}\r\n                        setOpenCreateFriendsList={setOpenCreateFriendsList}\r\n                    />\r\n                </>\r\n            ) : (\r\n                <div>Not authorized</div>\r\n            )}\r\n        </StyledPage>\r\n    )\r\n}\r\n\r\nconst StyledPage = styled.div`\r\n    display: flex;\r\n    background-color: #fafafa;\r\n    height: 100%;\r\n`;\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport default function SearchArea ({ setQuery, query }) {\r\n    const handleChange = (e) => {\r\n        const nextValue = e.target.value;\r\n        setQuery(nextValue);\r\n    };\r\n\r\n    return (\r\n        <SearchBox>\r\n            <SearchInput\r\n                type='text'\r\n                placeholder={`Search here`}\r\n                value={query}\r\n                onChange={(e) => handleChange(e)}\r\n            />\r\n        </SearchBox>\r\n    )\r\n};\r\n\r\nconst SearchBox = styled.div`\r\n    justify-content: flex-start;\r\n    display: flex;\r\n\r\n\t@media(max-width: 600px) {\r\n        flex-wrap: wrap;\r\n    }\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n\tfont-size: 1em;\r\n\tpadding: 0.5rem 0.5em;\r\n\tborder-radius: 4px;\r\n\tbackground-color: white;\r\n\tborder: 1px solid transparent;\r\n\tmargin: 1em;\r\n\theight: 1.2em;\r\n\twidth: 100%;\r\n\tbox-shadow: 0 0 0 1px #6b7177;\r\n`;","import styled from 'styled-components';\r\nimport { useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport UserContext from '../../context/UserContext';\r\n\r\nexport default function Suggestions ({ user }) {\r\n    const { userData, reload, setReload, setSelectedUser } = useContext(UserContext);\r\n    const [followed, setFollowed] = useState(false);\r\n    const history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        const checkIfFollowed = () => {\r\n            return (\r\n                setFollowed(userData.user.followings.some(e => e._id === user._id))\r\n            )\r\n        };\r\n\r\n        checkIfFollowed();\r\n    });\r\n\r\n    const handleFollowButton = async () => {\r\n        await uploadFollower();\r\n        \r\n        setReload(!reload);\r\n    };\r\n\r\n    const handleUnfollowButton = async () => {\r\n        await removeFollower();\r\n\r\n        setReload(!reload);\r\n    };\r\n\r\n    let token = localStorage.getItem('auth-token');\r\n\r\n    const uploadFollower = async () => {\r\n        try {\r\n            await axios.put('http://localhost:5000/friends/follow', \r\n                { userToFollow: user }, \r\n                { headers: { 'x-auth-token': token } },\r\n            )\r\n        } catch (err) {\r\n            console.log(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n    const removeFollower = async () => {\r\n        try {\r\n            await axios.put('http://localhost:5000/friends/unfollow',\r\n                { userToUnfollow: user }, \r\n                { headers: { 'x-auth-token': token } },\r\n            )\r\n        } catch (err) {\r\n            console.log(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n    const goToProfile = () => {\r\n        setSelectedUser(user);\r\n        \r\n        history.push({\r\n            pathname: `/${user._id}/profile`,\r\n        });\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <ListItem>\r\n                <StyledAvatar \r\n                    src={user.avatar} \r\n                    alt={user.displayName} \r\n                    onClick={() => goToProfile()}\r\n                />\r\n                <Name onClick={() => goToProfile()}>\r\n                    {user.displayName}\r\n                </Name>\r\n                {followed ? \r\n                    <SyledButton active='active' variant='contained' onClick={handleUnfollowButton}>\r\n                        Unfollow\r\n                    </SyledButton> :\r\n                    <SyledButton variant='outlined' onClick={handleFollowButton}>\r\n                        Follow\r\n                    </SyledButton>\r\n                }\r\n            </ListItem>\r\n            <Divider />\r\n        </>\r\n    )\r\n}\r\n\r\nconst Name = styled.div`\r\n    display: flex;\r\n    margin-left: 1em;\r\n    font-size: 0.9em;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst SyledButton = styled(Button)`\r\n    text-transform: uppercase;\r\n    width: 100px;\r\n    height: 25px;\r\n    background-color: ${props => props.active ? 'lightred' : 'lightgreen'};\r\n    position: absolute;\r\n    right: 16px;\r\n`;\r\n\r\nconst StyledAvatar = styled(Avatar)`\r\n    cursor: pointer;\r\n`;","import styled from 'styled-components';\r\nimport { useState, useEffect } from 'react';\r\nimport SearchArea from './SearchArea';\r\nimport axios from 'axios';\r\n\r\nimport List from '@material-ui/core/List';\r\n\r\nimport User from './User';\r\n\r\nexport default function Suggestions () {\r\n    const [users, setUsers] = useState('');\r\n    const [query, setQuery] = useState('');\r\n\r\n    useEffect(() => {\r\n        const getUsers = async () => {\r\n            const token = localStorage.getItem('auth-token');\r\n            \r\n            try {\r\n                await axios.get('http://localhost:5000/friends/', {\r\n                    headers: { 'x-auth-token': token }\r\n                })\r\n                .then(\r\n                    resp => {\r\n                        setUsers(resp.data.filteredUsers);\r\n                    })\r\n            } catch (err) {\r\n                console.log(err.response.data.msg);\r\n            }\r\n        };\r\n        \r\n        getUsers();\r\n    }, []);\r\n\r\n    return (\r\n        <Dashboard>\r\n            <SearchArea query={query} setQuery={setQuery} />\r\n            <List>\r\n                {users.length > 0 && users\r\n                    .filter((user) => {\r\n                        if (!query) return true\r\n                        if (user.displayName.toLowerCase().includes(query)) return true\r\n                        else return false\r\n                    })\r\n                    .map((user) => (\r\n                        <User key={user._id} user={user} />\r\n                    ))\r\n                }\r\n            </List>\r\n        </Dashboard>\r\n    )\r\n}\r\n\r\nconst Dashboard = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: white;\r\n    box-shadow: 0 5px 15px 0 rgba(0,0,0,0.1);\r\n    border-radius: 4px;\r\n`;","import styled from 'styled-components';\r\nimport { useState, useContext } from 'react';\r\nimport SearchArea from './SearchArea';\r\n\r\nimport List from '@material-ui/core/List';\r\n\r\nimport User from './User';\r\nimport UserContext from '../../context/UserContext';\r\n\r\nexport default function Followers () {\r\n    const { userData } = useContext(UserContext);\r\n    const savedFollowers = userData.user.followers;\r\n    \r\n    const [query, setQuery] = useState('');\r\n\r\n    return (\r\n        <Dashboard>\r\n            <SearchArea query={query} setQuery={setQuery} />\r\n            <List>\r\n                {savedFollowers && savedFollowers\r\n                    .map((user) => (\r\n                        <User key={user._id} user={user} />\r\n                    ))\r\n                }\r\n            </List>\r\n        </Dashboard>\r\n    )\r\n}\r\n\r\nconst Dashboard = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: white;\r\n    box-shadow: 0 5px 15px 0 rgba(0,0,0,0.1);\r\n    border-radius: 4px;\r\n`;","import styled from 'styled-components';\r\nimport { useState, useContext } from 'react';\r\nimport SearchArea from './SearchArea';\r\n\r\nimport List from '@material-ui/core/List';\r\n\r\nimport User from './User';\r\nimport UserContext from '../../context/UserContext';\r\n\r\nexport default function Followings () {\r\n    const { userData } = useContext(UserContext);\r\n    const savedFollowings = userData.user.followings;\r\n    \r\n    const [query, setQuery] = useState('');\r\n\r\n    return (\r\n        <Dashboard>\r\n            <SearchArea query={query} setQuery={setQuery} />\r\n            <List>\r\n                {savedFollowings && savedFollowings\r\n                    .map((user) => (\r\n                        <User key={user._id} user={user} />\r\n                    ))\r\n                }\r\n            </List>\r\n        </Dashboard>\r\n    )\r\n}\r\n\r\nconst Dashboard = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: white;\r\n    box-shadow: 0 5px 15px 0 rgba(0,0,0,0.1);\r\n    border-radius: 4px;\r\n`;","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Suggestions from './Suggestions';\r\nimport Followers from './Followers';\r\nimport Followings from './Followings';\r\n\r\nexport default function FriendsDashboard () {\r\n    const [ selectedHeader, setSelectedHeader ] = useState('suggestions');\r\n\r\n    return (\r\n        <Container>\r\n            <HeaderWrapper>\r\n                <Subheader onClick={() => setSelectedHeader('suggestions')}>Suggestions</Subheader>\r\n                <Subheader onClick={() => setSelectedHeader('followers')}>Followers</Subheader>\r\n                <Subheader onClick={() => setSelectedHeader('followings')}>Followings</Subheader>\r\n            </HeaderWrapper>\r\n            {selectedHeader === 'suggestions' && <Suggestions />}\r\n            {selectedHeader === 'followers' && <Followers />}\r\n            {selectedHeader === 'followings' && <Followings />}\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 90vh;\r\n    width: 75%;\r\n    margin: auto;\r\n    margin-top: 0.5em;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n    display: flex;\r\n    height: 8vh;\r\n    align-content: center;\r\n    justify-content: space-around;\r\n`; \r\n\r\nconst Subheader = styled.div`\r\n    display: flex;\r\n    font-weight: 600;\r\n    font-size: 1em;\r\n    justify-content: center;\r\n    align-items: center;\r\n    line-height: 8vh;\r\n    text-transform: uppercase;\r\n    width: 33%;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        border-bottom: 4px solid rgba(245,60,47,0.85);\r\n        transition: all 0.3s ease 0s;\r\n    }\r\n`; \r\n\r\n","import { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../context/UserContext';\r\nimport useStyles from '../themes/theme.profile';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\n\r\nimport Navbar from '../components/Navbar';\r\nimport Sidebar from '../components/Sidebar/index';\r\nimport CreatePoll from '../components/CreatePoll/index';\r\nimport FriendsDashboard from '../components/FriendsDashboard/index';\r\n\r\n \r\nexport default function Friends () {   \r\n    const { userData } = useContext(UserContext);\r\n    const classes = useStyles();\r\n    const [openCreatePoll, setOpenCreatePoll] = useState(false);\r\n\r\n    return (\r\n        <StyledPage>\r\n            {userData.user ? (\r\n                <>\r\n                    <AppBar position='fixed' className={classes.appBar}>\r\n                        <Navbar setOpenCreatePoll={setOpenCreatePoll} />\r\n                    </AppBar>\r\n                    <Sidebar /> \r\n                    <main className={classes.content}>\r\n                        <div className={classes.toolbar} />\r\n                        <FriendsDashboard />\r\n                    </main>\r\n                    <CreatePoll \r\n                        openCreatePoll={openCreatePoll}\r\n                        setOpenCreatePoll={setOpenCreatePoll}\r\n                    />\r\n                </>\r\n            ) : (\r\n                <div>Not authorized</div>\r\n            )}\r\n        </StyledPage>\r\n    )\r\n}\r\n\r\nconst StyledPage = styled.div`\r\n    display: flex;\r\n    background-color: #fafafa;\r\n    height: 100%;\r\n`;","import styled from 'styled-components';\r\n\r\nimport ImageOpinions from './ImageOpinions';\r\n\r\nexport default function OpinionsPoll ({ poll }) {   \r\n    return (\r\n        <PollCard>\r\n            <Header>\r\n                <Question>{poll.question}</Question>\r\n            </Header>\r\n            <Subheader>{poll.votedForImageOne.length + poll.votedForImageTwo.length} answers</Subheader>\r\n            <Images>\r\n                <ImageOpinions imageUrl={poll.imageOneUrl} imageVotes={poll.imageOneVotes} />\r\n                <ImageOpinions imageUrl={poll.imageTwoUrl} imageVotes={poll.imageTwoVotes} />\r\n            </Images>\r\n        </PollCard>\r\n    )\r\n}\r\n\r\nconst PollCard = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    background-color: white;\r\n    width: 45vh;\r\n    height: 40vh;\r\n    box-shadow: 0 5px 15px 0 rgba(0,0,0,0.1);\r\n    border-radius: 2px;\r\n    margin-right: 1em;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin: auto;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n`;\r\n\r\nconst Question = styled.div`\r\n    align-self: center;\r\n    text-align: center;\r\n    font-weight: 600;\r\n    width: 40vh;\r\n    margin-top: 0.5em;\r\n    margin-bottom: 0.5em;\r\n`;\r\n\r\nconst Subheader = styled.span`\r\n    align-self: center;\r\n    color: lightgray;\r\n    font-size: 0.8em;\r\n`;\r\n\r\nconst Images = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 1em;\r\n`;\r\n\r\n","import { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport useStyles from '../themes/theme.profile';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport GridList from '@material-ui/core/GridList';\r\n\r\nimport Navbar from '../components/Navbar';\r\nimport Sidebar from '../components/Sidebar/index';\r\nimport CreatePoll from '../components/CreatePoll/index';\r\nimport OpinionsPoll from '../components/Opinions/OpinionsPoll';\r\nimport UserContext from '../context/UserContext';\r\n \r\nexport default function Opinions () {   \r\n    const { userData } = useContext(UserContext);\r\n    const classes = useStyles();\r\n    const [openCreatePoll, setOpenCreatePoll] = useState(false);\r\n\r\n    return (\r\n        <StyledPage>\r\n            {userData.user ? (\r\n                <>\r\n                    <AppBar position='fixed' className={classes.appBar}>\r\n                        <Navbar setOpenCreatePoll={setOpenCreatePoll} />\r\n                    </AppBar>\r\n                    <Sidebar /> \r\n                    <main className={classes.content}>\r\n                        <div className={classes.toolbar} />\r\n                        <PollsWrapper>\r\n                            <StyledGridList>\r\n                                {userData.user.polls\r\n                                    ? userData.user.polls.map((poll, index) => (\r\n                                        <OpinionsPoll \r\n                                            poll={poll} \r\n                                            key={index}\r\n                                        />\r\n                                    )) : (\r\n                                        <div>Create your first poll</div>\r\n                                    )\r\n                                }\r\n                            </StyledGridList>\r\n                        </PollsWrapper>\r\n                    </main>\r\n                    <CreatePoll \r\n                        openCreatePoll={openCreatePoll}\r\n                        setOpenCreatePoll={setOpenCreatePoll}\r\n                    />\r\n                </>\r\n            ) : (\r\n                <div>Not authorized</div>\r\n            )}\r\n        </StyledPage>\r\n    )\r\n}\r\n\r\nconst StyledPage = styled.div`\r\n    display: flex;\r\n    background-color: #fafafa;\r\n    height: 100%;\r\n`;\r\n\r\nconst PollsWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    overflow: hidden;\r\n    margin: 1em;\r\n    width: 110vh;\r\n    height: 44vh;\r\n`;\r\n\r\nconst StyledGridList = styled(GridList)`\r\n    flex-wrap: nowrap;\r\n    transform: translateZ(0);    \r\n`;","import { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport useStyles from '../themes/theme.profile';\r\nimport axios from 'axios';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\n\r\nimport Navbar from '../components/Navbar';\r\nimport Sidebar from '../components/Sidebar/index';\r\nimport CreatePoll from '../components/CreatePoll/index';\r\nimport UserContext from '../context/UserContext';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n \r\nexport default function Profile () {   \r\n    const { userData, reload, setReload } = useContext(UserContext);\r\n    const classes = useStyles();\r\n    const [openCreatePoll, setOpenCreatePoll] = useState(false);\r\n    const [previewSource, setPreviewSource] = useState();\r\n    const fileInputState = '';\r\n\r\n    const dataToUpdate = {\r\n        displayName: '',\r\n        avatar: '',\r\n        error: null,\r\n    };\r\n\r\n    const [updatedUser, setUpdatedUser] = useState(dataToUpdate);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUpdatedUser(prevUser => {\r\n            return { \r\n                ...prevUser, \r\n                [name]: value, \r\n            }\r\n        });\r\n    };\r\n\r\n    const handleFileInputChange = (e) => {\r\n        const file = e.target.files[0];\r\n        previewFile(file);\r\n    };\r\n\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n        };\r\n    };\r\n\r\n    const handleUpdateProfile = async (e) => {\r\n        e.preventDefault();\r\n        if (!updatedUser) return;\r\n\r\n        const updatedUserForUpload = {\r\n            displayName: updatedUser.displayName,\r\n            avatar: previewSource,\r\n        }\r\n\r\n        await updateUser(updatedUserForUpload);\r\n        setReload(!reload);\r\n\r\n        setPreviewSource('');\r\n        setUpdatedUser(dataToUpdate);\r\n    };\r\n\r\n    const updateUser = async (updatedUserForUpload) => {\r\n        const token = localStorage.getItem('auth-token');\r\n        \r\n        try {\r\n            await axios.put('http://localhost:5000/users/update', \r\n                { updatedUserForUpload }, \r\n                { headers: { 'x-auth-token': token } },\r\n            )\r\n        } catch (err) {\r\n            err.response.data.msg && setUpdatedUser({ ...updatedUser, error: err.response.data.msg });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <StyledPage>\r\n            {userData.user ? (\r\n                <>\r\n                    <AppBar position='fixed' className={classes.appBar}>\r\n                        <Navbar setOpenCreatePoll={setOpenCreatePoll} />\r\n                    </AppBar>\r\n                    <Sidebar /> \r\n                    <main className={classes.content}>\r\n                        <div className={classes.toolbar} />\r\n                        <UserInputForm>\r\n                            <UserInputLine>\r\n                                <StyledTextField \r\n                                    label='Name'\r\n                                    id='name'\r\n                                    name='displayName'\r\n                                    type='text'\r\n                                    onChange={handleChange}\r\n                                    value={updatedUser.displayName}\r\n                                />\r\n                                {userData && <SavedData>{userData.user.displayName}</SavedData>}\r\n                            </UserInputLine>\r\n                            <ImageUploader>\r\n                                {previewSource ? (\r\n                                    <ImageContainer>\r\n                                        <Image src={previewSource} alt='chosenOne' />\r\n                                    </ImageContainer>\r\n                                ) : (\r\n                                    <Prompt>Select Your Avatar</Prompt>\r\n                                )}\r\n                                <StyledForm>\r\n                                    <StyledInput \r\n                                        type='file' \r\n                                        name='imageOne' \r\n                                        onChange={handleFileInputChange}\r\n                                        value={fileInputState}\r\n                                    />\r\n                                </StyledForm>\r\n                            </ImageUploader>\r\n                            <SyledButton variant='outlined' onClick={handleUpdateProfile}>\r\n                                Update Profile\r\n                            </SyledButton>\r\n                        </UserInputForm>\r\n                    </main>\r\n                    <CreatePoll \r\n                        openCreatePoll={openCreatePoll}\r\n                        setOpenCreatePoll={setOpenCreatePoll}\r\n                    />\r\n                </>\r\n            ) : (\r\n                <div>Not authorized</div>\r\n            )}\r\n        </StyledPage>\r\n    )\r\n}\r\n\r\nconst StyledPage = styled.div`\r\n    display: flex;\r\n    background-color: #fafafa;\r\n    height: 100%;\r\n`;\r\n\r\nconst StyledTextField = styled(TextField)`\r\n    text-align: center;\r\n    font-size: 0.5em;\r\n    flex: 7;\r\n`;\r\n\r\nconst UserInputForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 45%;\r\n    justify-content: space-between;\r\n    margin: auto;\r\n\tmargin-top: 1.5em;\r\n`;\r\n\r\nconst UserInputLine = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst SavedData = styled.div`\r\n    margin: auto;\r\n\tcolor: grey;\r\n    padding-top: 10px;\r\n    flex: 3;\r\n    text-align: center;\r\n`;\r\n\r\nconst Image = styled.img`\r\n    height: 70px;\r\n    width: 70px;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n    margin-top: 2em;\r\n`;\r\n\r\nconst StyledForm = styled.div`\r\n    margin: auto;\r\n    margin-top: 0.5em;\r\n    margin-bottom: 0.5em;\r\n    width: 50%;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n    margin-top: 1em;\r\n`;\r\n\r\nconst Prompt = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n    flex-direction: column;\r\n    color: lightgray;\r\n    margin-top: 1.5em;\r\n    margin-bottom: 1em;\r\n`;\r\n\r\nconst ImageUploader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-top: 1em;\r\n`;\r\n\r\nconst SyledButton = styled(Button)`\r\n    align-self: flex-end;\r\n    text-transform: uppercase;\r\n    width: 140px;\r\n    margin: auto;\r\n    margin-top: 1.5em;\r\n    margin-bottom: 0;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\n\r\nimport UserContext from '../../context/UserContext';\r\nimport { SocketContext } from '../../context/SocketContext';\r\n\r\nexport default function ImageReview ({ userId, pollId, imageUrl, imageVotes, votedForThisImage, votedForOtherImage, image }) {\r\n    const { reload, setReload } = useContext(UserContext);\r\n    const socketContext = useContext(SocketContext);\r\n\r\n    const handleVote = async () => {\r\n        if (votedForOtherImage && votedForOtherImage.includes(userId)) {\r\n            return\r\n        } else if (votedForThisImage && votedForThisImage.includes(userId)) {\r\n            await removeVote();\r\n        } else await addVote();\r\n\r\n        setReload(!reload);\r\n    };\r\n\r\n    const addVote = async () => {\r\n        let token = localStorage.getItem('auth-token');\r\n        \r\n        try {\r\n            await axios.put('http://localhost:5000/polls/vote-add', \r\n                { pollId, imageVotes, image }, \r\n                { headers: { 'x-auth-token': token } },\r\n            )\r\n            socketContext.emit('user-add-vote');\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const removeVote = async () => {\r\n        let token = localStorage.getItem('auth-token');\r\n        \r\n        try {\r\n            await axios.put('http://localhost:5000/polls/vote-remove', \r\n                { pollId, imageVotes, image }, \r\n                { headers: { 'x-auth-token': token } },\r\n            )\r\n            socketContext.emit('user-remove-vote');\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <ImageWrapper>\r\n            <StyledImage src={imageUrl} alt='pollImage' />\r\n            <Likes>\r\n                {votedForThisImage && votedForThisImage.includes(userId)\r\n                    ? <StyledFavoriteIcon onClick={handleVote} /> \r\n                    : <StyledFavoriteBorderIcon onClick={handleVote} />\r\n                }\r\n                {imageVotes}\r\n            </Likes>\r\n        </ImageWrapper>\r\n    )\r\n}\r\n\r\nconst ImageWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst Likes = styled.div`\r\n    display: flex;\r\n    width: 50px;\r\n    justify-content: space-around;\r\n`;\r\n\r\nconst StyledImage = styled.img`\r\n    height: 70px;\r\n    width: 70px;\r\n    margin: 1em 0.5em 1.5em 0.5em;\r\n`;\r\n\r\nconst StyledFavoriteIcon = styled(FavoriteIcon)`\r\n    cursor: pointer;\r\n`;\r\n\r\nconst StyledFavoriteBorderIcon = styled(FavoriteBorderIcon)`\r\n    cursor: pointer;\r\n`;","import styled from 'styled-components';\r\n\r\nimport ImageReview from './ImageReview';\r\n\r\nexport default function ReviewPoll ({ poll, userId }) {   \r\n    return (\r\n        <PollCard>\r\n            <Header>\r\n                <Question>{poll.question}</Question>\r\n            </Header>\r\n            <Subheader>Created by {poll.author}</Subheader>\r\n            <Images>\r\n                <ImageReview \r\n                    imageUrl={poll.imageOneUrl}\r\n                    imageVotes={poll.imageOneVotes}\r\n                    votedForThisImage={poll.votedForImageOne}\r\n                    votedForOtherImage={poll.votedForImageTwo}\r\n                    image='one'\r\n                    pollId={poll._id}\r\n                    userId={userId}\r\n                />\r\n                <ImageReview \r\n                    imageUrl={poll.imageTwoUrl}\r\n                    imageVotes={poll.imageTwoVotes}\r\n                    votedForThisImage={poll.votedForImageTwo}\r\n                    votedForOtherImage={poll.votedForImageOne}\r\n                    image='two'\r\n                    pollId={poll._id}\r\n                    userId={userId}\r\n                />\r\n            </Images>\r\n        </PollCard>\r\n    )\r\n}\r\n\r\nconst PollCard = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    background-color: white;\r\n    width: 45vh;\r\n    height: 40vh;\r\n    box-shadow: 0 5px 15px 0 rgba(0,0,0,0.1);\r\n    border-radius: 2px;\r\n    margin-right: 1em;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Question = styled.div`\r\n    align-self: center;\r\n    text-align: center;\r\n    font-weight: 600;\r\n    width: 40vh;\r\n    margin-top: 0.5em;\r\n    margin-bottom: 0.5em;\r\n    margin-left: 1em;\r\n`;\r\n\r\nconst Subheader = styled.span`\r\n    align-self: center;\r\n    color: lightgray;\r\n    font-size: 0.8em;\r\n`;\r\n\r\nconst Images = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 1em;\r\n`;\r\n\r\n","import { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport useStyles from '../themes/theme.profile';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport GridList from '@material-ui/core/GridList';\r\n\r\nimport Navbar from '../components/Navbar';\r\nimport Sidebar from '../components/Sidebar/index';\r\nimport CreatePoll from '../components/CreatePoll/index';\r\nimport ReviewPoll from '../components/PollsForReview/ReviewPoll';\r\nimport UserContext from '../context/UserContext';\r\n \r\nexport default function PollsForReview () {   \r\n    const { userData } = useContext(UserContext);\r\n    const classes = useStyles();\r\n    const [openCreatePoll, setOpenCreatePoll] = useState(false);\r\n\r\n    return (\r\n        <StyledPage>\r\n            {userData.user ? (\r\n                <>\r\n                    <AppBar position='fixed' className={classes.appBar}>\r\n                        <Navbar setOpenCreatePoll={setOpenCreatePoll} />\r\n                    </AppBar>\r\n                    <Sidebar /> \r\n                    <main className={classes.content}>\r\n                        <div className={classes.toolbar} />\r\n                        <PollsWrapper>\r\n                            <StyledGridList>\r\n                                {userData.user.pollsForReview\r\n                                    ? userData.user.pollsForReview.map((poll, index) => (\r\n                                        <ReviewPoll \r\n                                            poll={poll} \r\n                                            key={index}\r\n                                            userId={userData.user.id}\r\n                                        />\r\n                                    )) : (\r\n                                        <div>Create your first poll</div>\r\n                                    )\r\n                                }\r\n                            </StyledGridList>\r\n                        </PollsWrapper>\r\n                    </main>\r\n                    <CreatePoll \r\n                        openCreatePoll={openCreatePoll}\r\n                        setOpenCreatePoll={setOpenCreatePoll}\r\n                    />\r\n                </>\r\n            ) : (\r\n                <div>Not authorized</div>\r\n            )}\r\n        </StyledPage>\r\n    )\r\n}\r\n\r\nconst StyledPage = styled.div`\r\n    display: flex;\r\n    background-color: #fafafa;\r\n    height: 100%;\r\n`;\r\n\r\nconst PollsWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    overflow: hidden;\r\n    margin: 1em;\r\n    width: 110vh;\r\n    height: 44vh;\r\n`;\r\n\r\nconst StyledGridList = styled(GridList)`\r\n    flex-wrap: nowrap;\r\n    transform: translateZ(0);    \r\n`;","import { useState, useContext, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport useStyles from '../themes/theme.profile';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\n\r\nimport Navbar from '../components/Navbar';\r\nimport Sidebar from '../components/Sidebar/index';\r\nimport CreatePoll from '../components/CreatePoll/index';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport UserContext from '../context/UserContext';\r\n \r\nexport default function PublicProfile () {   \r\n    const classes = useStyles();\r\n    const { userData, setUserData } = useContext(UserContext);\r\n    const [openCreatePoll, setOpenCreatePoll] = useState(false);\r\n    const [selectedUser, setSelectedUser] = useState('');\r\n    const location = useLocation();\r\n    \r\n    const userId = location.pathname.split('/')[1];\r\n\r\n    useEffect(() => {\r\n        const getSelectedUser = async () => {\r\n            const token = localStorage.getItem('auth-token');\r\n            \r\n            const userRes = await axios.post(\r\n                'http://localhost:5000/users/getUserProfile',\r\n                { userId },\r\n                { headers: { 'x-auth-token': token } },\r\n            );\r\n            setSelectedUser(userRes.data);\r\n        }\r\n\r\n        getSelectedUser();\r\n    }, [ userId ]);\r\n\r\n    if (!userData.user) {\r\n        const token = localStorage.getItem('auth-token');\r\n\r\n        const getUser = async () => {\r\n            const userRes = await axios.get(\r\n                'http://localhost:5000/users/',\r\n                { headers: { 'x-auth-token': token } },\r\n            );\r\n            setUserData({\r\n                token,\r\n                user: userRes.data,\r\n            });\r\n        };\r\n\r\n        getUser();\r\n    }\r\n\r\n    return (\r\n        <StyledPage>\r\n            {selectedUser && userData.user.followings.some(e => e._id === userId) ? (\r\n                <>\r\n                    <AppBar position='fixed' className={classes.appBar}>\r\n                        <Navbar setOpenCreatePoll={setOpenCreatePoll} />\r\n                    </AppBar>\r\n                    <Sidebar /> \r\n                    <main className={classes.content}>\r\n                        <div className={classes.toolbar} />\r\n                        <UserDataWrapper>\r\n                            <StyledAvatar \r\n                                alt={selectedUser.displayName} \r\n                                src={selectedUser.avatar}\r\n                            />\r\n                            <h2>{selectedUser.displayName}</h2>\r\n                        </UserDataWrapper>\r\n                    </main>\r\n                    <CreatePoll \r\n                        openCreatePoll={openCreatePoll}\r\n                        setOpenCreatePoll={setOpenCreatePoll}\r\n                    />\r\n                </>\r\n            ) : (\r\n                <div>You can only view profiles of users that you follow</div>\r\n            )}\r\n        </StyledPage>\r\n    )\r\n}\r\n\r\nconst StyledPage = styled.div`\r\n    display: flex;\r\n    background-color: #fafafa;\r\n    height: 100vh;\r\n`;\r\n\r\nconst UserDataWrapper = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 45%;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: auto;\r\n\tmargin-top: 1.5em;\r\n`;\r\n\r\nconst StyledAvatar = styled(Avatar)`\r\n    height: 70px;\r\n    width: 70px;\r\n`;\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { MuiThemeProvider } from '@material-ui/core';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport { theme } from './themes/theme';\r\nimport SignIn from './pages/SignIn'; \r\nimport SignUp from './pages/SignUp';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Friends from './pages/Friends';\r\nimport Opinions from './pages/Opinions';\r\nimport Profile from './pages/Profile';\r\nimport PollsForReview from './pages/PollsForReview';\r\nimport PublicProfile from './pages/PublicProfile';\r\nimport UserContext from './context/UserContext';\r\nimport { SocketContext, socket } from './context/SocketContext';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [userData, setUserData] = useState({\r\n    token: undefined,\r\n    user: undefined,\r\n  });\r\n  const [reload, setReload] = useState(true); \r\n  const [selectedUser, setSelectedUser] = useState();\r\n  const [polls, setPolls] = useState('');\r\n\r\n  useEffect(() => {\r\n    const checkLoggedIn = async () => {\r\n      let token = localStorage.getItem('auth-token');\r\n      if (token === null) {\r\n        localStorage.setItem('auth-token', '');\r\n        token = '';\r\n      }\r\n      const tokenRes = await axios.post(\r\n        'http://localhost:5000/users/tokenIsValid',\r\n        null,\r\n        { headers: { 'x-auth-token': token } },\r\n      );\r\n\r\n      if (tokenRes.data) {\r\n        const userRes = await axios.get(\r\n          'http://localhost:5000/users/',\r\n          { headers: { 'x-auth-token': token } },\r\n        );\r\n        setUserData({\r\n          token,\r\n          user: userRes.data,\r\n        });\r\n        setPolls(userRes.data.polls);\r\n      }\r\n    };\r\n\r\n    checkLoggedIn();\r\n  }, [reload]);\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      <MuiThemeProvider theme={theme}>\r\n        <Router>\r\n          <UserContext.Provider value={{ userData, setUserData, reload, setReload, polls, setPolls, selectedUser, setSelectedUser }}>\r\n            <Switch>\r\n                <Route exact path='/'>\r\n                  <SignIn />\r\n                </Route>\r\n                <Route exact path='/signup'>\r\n                  <SignUp />\r\n                </Route>\r\n                <Route exact path='/dashboard'>\r\n                  <Dashboard />\r\n                </Route>\r\n                <Route exact path='/friends'>\r\n                  <Friends />\r\n                </Route>\r\n                <Route exact path='/review'>\r\n                  <PollsForReview />\r\n                </Route>\r\n                <Route exact path='/opinions'>\r\n                  <Opinions />\r\n                </Route>\r\n                <Route exact path='/profile'>\r\n                  <Profile />\r\n                </Route>\r\n                <Route exact path='/:userId/profile'>\r\n                  <PublicProfile />\r\n                </Route>\r\n              </Switch>\r\n            </UserContext.Provider>\r\n        </Router>\r\n      </MuiThemeProvider>\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}